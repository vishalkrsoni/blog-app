{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nexport const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nexport const validateEmail = email => {\n  return email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\n// Register User\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${BACKEND_URL}/user/sign-up`, userData, {\n      withCredentials: true\n    });\n    if (response.statusText === \"OK\") {\n      toast.success(\"User Registered successfully\");\n    }\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    toast.error(message);\n  }\n};\n\n// Login User\nexport const loginUser = async userData => {\n  try {\n    const response = await axios.post(`${BACKEND_URL}/user/sign-in`, userData);\n    if (response.statusText === \"OK\") {\n      toast.success(\"Login Successful...\");\n    }\n    // Save token in local storage\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    toast.error(message);\n  }\n};\n\n// Logout User\nexport const logoutUser = async () => {\n  try {\n    localStorage.removeItem(\"token\");\n    await axios.get(`${BACKEND_URL}/user/sign-`);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    toast.error(message);\n  }\n};","map":{"version":3,"names":["axios","toast","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","validateEmail","email","match","registerUser","userData","response","post","withCredentials","statusText","success","data","error","message","toString","loginUser","token","localStorage","setItem","logoutUser","removeItem","get"],"sources":["/Users/eagle/AttainU-Repo/Vishal-Soni-au49/FPRT/FPRT-1/Full-Stack/frontEnd/fprt-1/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nexport const validateEmail = (email) => {\n  return email.match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n};\n\n\n// Register User\nexport const registerUser = async (userData) => {\n  try {\n    const response = await axios.post(\n      `${BACKEND_URL}/user/sign-up`,\n      userData,\n      { withCredentials: true }\n    );\n    if (response.statusText === \"OK\") {\n      toast.success(\"User Registered successfully\");\n    }\n    return response.data;\n  } catch (error) {\n    const message =\n      (error.response && error.response.data && error.response.data.message) ||\n      error.message ||\n      error.toString();\n    toast.error(message);\n  }\n};\n\n// Login User\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axios.post(\n      `${BACKEND_URL}/user/sign-in`,\n      userData\n    );\n    if (response.statusText === \"OK\") {\n      toast.success(\"Login Successful...\");\n    }\n    // Save token in local storage\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n\n    return response.data;\n  } catch (error) {\n    const message =\n      (error.response && error.response.data && error.response.data.message) ||\n      error.message ||\n      error.toString();\n    toast.error(message);\n  }\n};\n\n// Logout User\nexport const logoutUser = async () => {\n  try {\n    localStorage.removeItem(\"token\");\n    await axios.get(`${BACKEND_URL}/user/sign-`);\n  } catch (error) {\n    const message =\n      (error.response && error.response.data && error.response.data.message) ||\n      error.message ||\n      error.toString();\n    toast.error(message);\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAE5D,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,OAAOA,KAAK,CAACC,KAAK,CAChB,uJAAuJ,CACxJ;AACH,CAAC;;AAGD;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC9B,GAAEV,WAAY,eAAc,EAC7BQ,QAAQ,EACR;MAAEG,eAAe,EAAE;IAAK,CAAC,CAC1B;IACD,IAAIF,QAAQ,CAACG,UAAU,KAAK,IAAI,EAAE;MAChCb,KAAK,CAACc,OAAO,CAAC,8BAA8B,CAAC;IAC/C;IACA,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACK,IAAI,IAAIC,KAAK,CAACN,QAAQ,CAACK,IAAI,CAACE,OAAO,IACrED,KAAK,CAACC,OAAO,IACbD,KAAK,CAACE,QAAQ,EAAE;IAClBlB,KAAK,CAACgB,KAAK,CAACC,OAAO,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOV,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC9B,GAAEV,WAAY,eAAc,EAC7BQ,QAAQ,CACT;IACD,IAAIC,QAAQ,CAACG,UAAU,KAAK,IAAI,EAAE;MAChCb,KAAK,CAACc,OAAO,CAAC,qBAAqB,CAAC;IACtC;IACA;IACA,MAAMM,KAAK,GAAGV,QAAQ,CAACK,IAAI,CAACK,KAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IAEpC,OAAOV,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACK,IAAI,IAAIC,KAAK,CAACN,QAAQ,CAACK,IAAI,CAACE,OAAO,IACrED,KAAK,CAACC,OAAO,IACbD,KAAK,CAACE,QAAQ,EAAE;IAClBlB,KAAK,CAACgB,KAAK,CAACC,OAAO,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAG,YAAY;EACpC,IAAI;IACFF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAExB,WAAY,aAAY,CAAC;EAC9C,CAAC,CAAC,OAAOe,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACK,IAAI,IAAIC,KAAK,CAACN,QAAQ,CAACK,IAAI,CAACE,OAAO,IACrED,KAAK,CAACC,OAAO,IACbD,KAAK,CAACE,QAAQ,EAAE;IAClBlB,KAAK,CAACgB,KAAK,CAACC,OAAO,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}